@model ShoppingCartModel
@{
    Layout = "_ColumnsOne";

    //title
    Html.AddTitleParts(T("PageTitle.Checkout").Text);
    //page class
    Html.AppendPageCssClassParts("html-checkout-page");
    Html.AppendPageCssClassParts("html-order-confirm-page");
}
    <div class="page checkout-page order-confirm-page">
        @await Component.InvokeAsync("CheckoutProgress", new { step = CheckoutProgressStep.Confirm })
        <div class="page-title">
            <h1>@T("Checkout.ConfirmYourOrder")</h1>
        </div>
        @{
            Model.FromPage = "ConfirmPage";

            <div class="section order-summary">
                @await Component.InvokeAsync("OrderSummary", new { prepareAndDisplayOrderReviewData = true, fromPage = "ConfirmPage", overriddenModel = Model })
            </div>
        }
        <div class="page-body checkout-data">
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutConfirmTop })
            <div class="section confirm-order">
                <form asp-route="CheckoutConfirm" method="post" id="confirm-order-form">
                    <script asp-location="Footer">
                        $(document).ready(function () {
                            $('.confirm-order-next-step-button').on('click', function (e) {
                                e.preventDefault();

                                var isValid = true;
                                var customCheckoutAttributes = [];
                                var attributes = $(".checkout-attribute-elements");
                                for (let i = 0; i < attributes.length; i++) {
                                    var element = attributes[i];
                                    var elementId = $(element).attr('id');
                                    var subElementId = elementId.substring(19, elementId.length);
                                    var splitedElementId = subElementId.split('_');
                                    var vendorId = splitedElementId[0];
                                    var attributeId = splitedElementId[1];
                                    var attributeValue = $(element).val();

                                    if (attributeValue == "" || attributeValue == null) {
                                        isValid = false;
                                    } else {
                                        customCheckoutAttributes.push({
                                            vendorId: parseInt(vendorId),
                                            attributeId: parseInt(attributeId),
                                            attributeValue: attributeValue
                                        })
                                    }
                                }
                                if (!isValid) {
                                    alert("Please fill in delivery date and time to proceed.")
                                } else {
                                    var customAttrDiv = $("#custom-attributes");
                                    customCheckoutAttributes.forEach(function (customAtts, i) {
                                        customAttrDiv.append(`<input name='customCheckoutAttr[${i}].vendorId' value='${customAtts.vendorId}'>`);
                                        customAttrDiv.append(`<input name='customCheckoutAttr[${i}].attributeId' value='${customAtts.attributeId}'>`);
                                        customAttrDiv.append(`<input name='customCheckoutAttr[${i}].attributeValue' value='${customAtts.attributeValue}'>`);
                                    })
                                    $('#confirm-order-form').submit();
                                    customAttrDiv.html("");
                                }
                            });
                        });
                    </script>

                    <div id="custom-attributes" hidden>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.MinOrderTotalWarning))
                    {
                        <span class="min-order-warning">@Model.MinOrderTotalWarning</span>
                    }
                    else
                    {
                        if (Model.TermsOfServiceOnOrderConfirmPage)
                        {
                            <div id="terms-of-service-warning-box" title="@T("Checkout.TermsOfService")" style="display: none;">
                                <p>@T("Checkout.TermsOfService.PleaseAccept")</p>
                            </div>
                            <div class="terms-of-service">
                                <input id="termsofservice" type="checkbox" name="termsofservice" />
                                <label for="termsofservice">@T("Checkout.TermsOfService.IAccept")</label>
                                @if (Model.TermsOfServicePopup)
                                {
                                    <a class="read" id="read-terms">@T("Checkout.TermsOfService.Read")</a>
                                    <script asp-location="Footer">
                                    $(document).ready(function() {
                                        $('#read-terms').on('click',
                                            function(e) {
                                                e.preventDefault();
                                                displayPopupContentFromUrl('@Url.RouteUrl("TopicPopup", new {SystemName = "conditionsofuse"})', '@T("Checkout.TermsOfService")');
                                            });
                                    });
                                    </script>
                                }
                                else
                                {
                                    <a class="read" id="read-terms" href="@Url.RouteUrl("Topic", new {SeName = Html.GetTopicSeName("conditionsofuse") })">@T("Checkout.TermsOfService.Read")</a>
                                }
                            </div>
                        }
                        <div class="buttons">
                            <input type="button" value="@T("Checkout.ConfirmButton")" class="button-1 confirm-order-next-step-button"
                                   @(Model.NotInsideCoverage || Model.FailComputeShipping || Model.DeliveryDateClash || Model.ShipmentOverweight ? "disabled=disabled" : "") />

                            @if (Model.NotInsideCoverage || Model.FailComputeShipping)
                            {
                                <a href="@Url.RouteUrl("CheckoutShippingAddress")" class="button-0">@T("ShoppingCart.Shipping.ChangeAddress")</a>
                            } else if (Model.DeliveryDateClash)
                            {
                                <a href="@Url.RouteUrl("ShoppingCart")" class="button-0">@T("ShoppingCart.Shipping.UpdateCart")</a>
                            }
                        </div>
                        <script asp-location="Footer">
                            $('#confirm-order-form').on('submit',
                                function () {
                                    var button = $(this).find('input[type="submit"][name="nextstep"]');
                                    setTimeout(function () {
                                        button.prop('disabled', true);
                                    },
                                        0);
                                });
                        </script>
                    }
                    @if (Model.Warnings.Count > 0)
                    {
                        <div class="message-error">
                            <ul>
                                @foreach (var warning in Model.Warnings)
                                {
                                    <li>@warning</li>
                                }
                            </ul>
                        </div>
                    }
                </form>
            </div>
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.CheckoutConfirmBottom })


        </div>
    </div>
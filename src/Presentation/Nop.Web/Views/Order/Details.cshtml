@model OrderDetailsModel
@using Nop.Core.Domain.Orders;
@using Nop.Core.Domain.Payments;
@{
    if (!Model.PrintMode)
    {
        Layout = "_ColumnsOne";
    }
    else
    {
        Layout = "_Print";
    }
    //title
    Html.AddTitleParts(T("PageTitle.OrderDetails").Text);
    //page class
    Html.AppendPageCssClassParts("html-order-details-page");
}


@*@if (Model.PrintMode)
    {
        <script asp-location="Footer">
            $(document).ready(function () {
                window.print();
            });
        </script>


    }*@

<style>
    .stepper {
        width: 100%;
        margin-bottom: 20px;
    }

        .stepper > div {
            position: relative;
        }

    .stepper-step {
        width: 16%;
        padding: 0;
        margin: 0;
        text-align: center;
        display: inline-block;
        vertical-align: top;
    }

    .stepper-icon {
        border: 4px solid #9900CC;
        border-radius: 100%;
        background-color: white;
        width: 60px;
        height: 60px;
        margin-left: auto;
        margin-right: auto;
        line-height: 55px;
        color: #9900CC;
        font-weight: bold;
        font-size: 26px;
    }

    .stepper-text {
        vertical-align: top;
        margin-top: 10px;
    }

    .stepper-line {
        position: absolute;
        top: 50%;
        margin-top: -2px;
        left: 10%;
        right: 10%;
        height: 4px;
        background-color: #9900CC;
        z-index: -1;
    }

    .stepper-step > [name="step"] {
        position: absolute;
        opacity: 0;
    }

        .stepper-step > [name="step"]:checked + .stepper-icon {
            background-color: #9900CC;
            color: white;
        }

    @@media all and (max-width: 480px) {
        .stepper {
            display: none;
        }
    }
</style>
<div class="page order-details-page">
    @if (!Model.PrintMode)
    {
        <div class="page-title">
            <h1>@T("Order.OrderInformation")</h1>

            @if (Model.OrderStatus != "Cancelled"
             && Model.OrderStatus != "Return Processing")
            {
                <div class="stepper">
                    <div>
                        <div class="stepper-step">
                            <input id='step-1' name='step' type='radio' disabled>
                            <div class="stepper-icon">1</div>
                        </div>
                        <div class="stepper-step">
                            <input id='step-2' name='step' type='radio' disabled>
                            <div class="stepper-icon">2</div>
                        </div>
                        <div class="stepper-step">
                            <input id='step-3' name='step' type='radio' disabled>
                            <div class="stepper-icon">3</div>
                        </div>
                        <div class="stepper-step">
                            <input id='step-4' name='step' type='radio' disabled>
                            <div class="stepper-icon">4</div>
                        </div>
                        <div class="stepper-step">
                            <input id='step-5' name='step' type='radio' disabled>
                            <div class="stepper-icon">5</div>
                        </div>                        
                        <div class="stepper-step">
                            <input id='step-6' name='step' type='radio' disabled>
                            <div class="stepper-icon">6</div>
                        </div>
                        <div class="stepper-line">

                        </div>
                    </div>
                    <div>
                        <div class="stepper-step">
                            <div class="stepper-text">Order Paid</div>
                        </div>                        
                        <div class="stepper-step">
                            <div class="stepper-text">Order Prepared</div>
                        </div>
                        <div class="stepper-step">
                            <div class="stepper-text">Order Shipped Out</div>
                        </div>
                        <div class="stepper-step">
                            <div class="stepper-text">Order Delivered</div>
                        </div>
                        <div class="stepper-step">
                            <div class="stepper-text">Order Rated</div>
                        </div>
                        <div class="stepper-step">
                            <div class="stepper-text">Completed</div>
                        </div>
                    </div>
                </div>
            }

            <a href="@Url.RouteUrl("PrintOrderDetails", new { orderId = Model.Id })" target="_blank" class="button-2 print-order-button">@T("Order.Print")</a>
            @if (!Model.PdfInvoiceDisabled && Model.OrderStatus != "Pending" && Model.PaymentStatusId != (int)PaymentStatus.Pending)
            {
                <a href="@Url.RouteUrl("GetOrderPdfInvoice", new { orderId = Model.Id, vendorId = Model.Items[0].VendorId })" class="button-2 pdf-invoice-button">@T("Order.GetPDFInvoice")</a>
            }
            @if (Model.ShippingStatus == "Shipped" && Model.OrderStatus != "Cancelled" && Model.TrackingNumberUrl != null)
            {
                <a href="@Model.TrackingNumberUrl" target="_blank" class="button-2 print-order-button">Tracking</a>
            }
            @if (Model.RequireBarCode == true)
            {
                <a name="returnInstructions" class="btn-2" data-toggle="modal" data-target="#returnInstruction-window">View Return Instruction</a>
            }

            @*@if (Model.ReturnShipmentId == 0 && Model.NeedReturn == true)
                {
                    <a href="@Url.RouteUrl("AddReturnShipment", new { orderId = Model.Id})" class="button-2 pdf-invoice-button">Shipped</a>
                }*@

        </div>
    }

    <div class="page-body">

        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderDetailsPageTop, additionalData = Model })
        <div class="order-overview">
            <div class="order-number">
                <strong>@T("Order.Order#")@Model.CustomOrderNumber</strong>
            </div>
            <ul class="order-overview-content">
                <li class="order-date">
                    @T("Order.OrderDate"): @Model.CreatedOn.ToString("D")
                </li>
                <li class="order-status">
                    @T("Order.OrderStatus"): @Model.OrderStatus
                </li>
                @*<li class="order-status">
                    @T("Order.Shipping.Status"): @Model.ShippingStatus
                </li>*@
                @if (!String.IsNullOrEmpty(Model.ShippingMethod))
                {
                    <li class="order-status">
                        @T("Shipping.EstimateShippingPopUp.ChooseShippingTitle"): @Model.ShippingMethod
                    </li>
                }
                <li class="order-total">
                    @T("Order.OrderTotal"): <strong>@Model.OrderTotal</strong>
                </li>
                @if (Model.ShippingMethod == "Lalamove")
                {
                    <li class="order-status">
                        Delivery Date : @Model.DeliveryDate
                    </li>
                    <li class="order-status">
                        Delivery Timeslot : @Model.DeliveryTimeslot
                    </li>
                }
                @if (Model.OrderStatusId == (int)OrderStatus.Cancelled)
                {
                   <li class="order-status">
                        Cancellation Reason : @Model.CancellationReasonStr
                    </li>
                }
            </ul>
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderDetailsPageOverview, additionalData = Model })

            @if (Model.OrderStatusId == (int)OrderStatus.Pending && Model.PaymentStatusId == (int)PaymentStatus.Pending)
            {
                <div style="margin: 10px 0;">
                    <strong>We have yet to receive the payment confirmation from the payment gateway.</strong>
                </div>
            }

        </div>

            <div class="order-details-area">
                <div class="billing-info-wrap">
                    <div class="billing-info">
                        <div class="title">
                            <strong>@T("Order.BillingAddress")</strong>
                        </div>
                        <ul class="info-list">
                            <li class="name">
                                @Model.BillingAddress.FirstName @Model.BillingAddress.LastName
                            </li>
                            <li class="email">
                                @T("Order.Email"): @Model.BillingAddress.Email
                            </li>
                            @if (Model.BillingAddress.PhoneEnabled)
                            {
                                <li class="phone">
                                    @T("Order.Phone"): @Model.BillingAddress.PhoneNumber
                                </li>
                            }
                            @if (Model.BillingAddress.FaxEnabled)
                            {
                                <li class="fax">
                                    @T("Order.Fax"): @Model.BillingAddress.FaxNumber
                                </li>
                            }
                            @if (Model.BillingAddress.CompanyEnabled && !string.IsNullOrEmpty(Model.BillingAddress.Company))
                            {
                                <li class="company">
                                    @Model.BillingAddress.Company
                                </li>
                            }
                            @if (Model.BillingAddress.StreetAddressEnabled)
                            {
                                <li class="address1">
                                    @Model.BillingAddress.Address1
                                </li>
                            }
                            @if (Model.BillingAddress.StreetAddress2Enabled && !string.IsNullOrEmpty(Model.BillingAddress.Address2))
                            {
                                <li class="address2">
                                    @Model.BillingAddress.Address2
                                </li>
                            }
                            @if (Model.BillingAddress.CityEnabled && !string.IsNullOrEmpty(Model.BillingAddress.City) ||
                           Model.BillingAddress.CountyEnabled && !string.IsNullOrEmpty(Model.BillingAddress.County) ||
                           Model.BillingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.BillingAddress.StateProvinceName) ||
                           Model.BillingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.BillingAddress.ZipPostalCode))
                            {
                                <li class="city-state-zip">
                                    @if (Model.BillingAddress.CityEnabled && !string.IsNullOrEmpty(Model.BillingAddress.City))
                                    {
                                        @Model.BillingAddress.City
                                        @if (Model.BillingAddress.CountyEnabled && !string.IsNullOrEmpty(Model.BillingAddress.County) ||
                                       Model.BillingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.BillingAddress.StateProvinceName) ||
                                       Model.BillingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.BillingAddress.ZipPostalCode))
                                        {
                                            <text>,</text>
                                        }
                                    }
                                    @if (Model.BillingAddress.CountyEnabled && !string.IsNullOrEmpty(Model.BillingAddress.County))
                                    {
                                        @Model.BillingAddress.County
                                        @if (Model.BillingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.BillingAddress.StateProvinceName) ||
                                       Model.BillingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.BillingAddress.ZipPostalCode))
                                        {
                                            <text>,</text>
                                        }
                                    }
                                    @if (Model.BillingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.BillingAddress.StateProvinceName))
                                    {
                                        @Model.BillingAddress.StateProvinceName
                                        @if (Model.BillingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.BillingAddress.ZipPostalCode))
                                        {
                                            <text>,</text>
                                        }
                                    }
                                    @if (Model.BillingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.BillingAddress.ZipPostalCode))
                                    {
                                        @Model.BillingAddress.ZipPostalCode
                                    }
                                </li>
                            }
                            @if (Model.BillingAddress.CountryEnabled && !string.IsNullOrEmpty(Model.BillingAddress.CountryName))
                            {
                                <li class="country">
                                    @Model.BillingAddress.CountryName
                                </li>
                            }
                            @if (!string.IsNullOrEmpty(Model.VatNumber))
                            {
                                <li class="vat">
                                    <span class="label">
                                        @T("Order.VATNumber")
                                    </span>
                                    <span class="value">
                                        @Model.VatNumber
                                    </span>
                                </li>
                            }
                            @if (!string.IsNullOrEmpty(Model.BillingAddress.FormattedCustomAddressAttributes))
                            {
                                <li class="custom-attributes-view">
                                    @Html.Raw(Model.BillingAddress.FormattedCustomAddressAttributes)
                                </li>
                            }
                            @if (Model.CustomValues != null)
                            {
                                foreach (var item in Model.CustomValues)
                                {
                                    <li class="custom-value">
                                        <span class="label">
                                            @item.Key:
                                        </span>
                                        <span class="value">
                                            @(item.Value != null ? item.Value.ToString() : "")
                                        </span>
                                    </li>
                                }
                            }
                        </ul>
                    </div>
                    @if (!string.IsNullOrEmpty(Model.PaymentMethod))
                    {
                        <div class="payment-method-info">
                            <div class="title">
                                <strong>@T("Order.Payment")</strong>
                            </div>
                            <ul class="info-list">
                                <li class="payment-method">
                                    <span class="label">
                                        @T("Order.Payment.Method"):
                                    </span>
                                    <span class="value">
                                        @Model.PaymentMethod
                                    </span>
                                </li>
                                @if (!Model.PrintMode)
                                {
                                    <li class="payment-method-status">
                                        <span class="label">
                                            @T("Order.Payment.Status"):
                                        </span>
                                        <span class="value">
                                            @Model.PaymentMethodStatus
                                        </span>
                                    </li>
                                }
                                @if (!Model.PrintMode && Model.CanRePostProcessPayment)
                                {
                                    @*Complete payment (for redirection payment methods)*@
                                    <li class="repost">
                                        <form asp-route="OrderDetails" method="post">
                                            <input type="submit" name="repost-payment" value="@T("Order.RetryPayment")" class="button-2 re-order-button" />
                                            <p class="hint">
                                                <em>@T("Order.RetryPayment.Hint")</em>
                                            </p>
                                        </form>
                                    </li>
                                }
                            </ul>
                        </div>
                    }
                </div>
                @if (Model.IsShippable)
                {
                    <div class="shipping-info-wrap">
                        <div class="shipping-info">
                            <div class="title">
                                <strong>@(Model.PickupInStore ? T("Order.PickupAddress") : T("Order.ShippingAddress"))</strong>
                            </div>
                            <ul class="info-list">
                                @if (!Model.PickupInStore)
                                {
                                    <li class="name">
                                        @Model.ShippingAddress.FirstName @Model.ShippingAddress.LastName
                                    </li>
                                    <li class="email">
                                        @T("Order.Email"): @Model.ShippingAddress.Email
                                    </li>
                                    if (Model.ShippingAddress.PhoneEnabled)
                                    {
                                        <li class="phone">
                                            @T("Order.Phone"): @Model.ShippingAddress.PhoneNumber
                                        </li>
                                    }
                                    if (Model.ShippingAddress.FaxEnabled)
                                    {
                                        <li class="fax">
                                            @T("Order.Fax"): @Model.ShippingAddress.FaxNumber
                                        </li>
                                    }
                                    if (Model.ShippingAddress.CompanyEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.Company))
                                    {
                                        <li class="company">
                                            @Model.ShippingAddress.Company
                                        </li>
                                    }
                                    if (Model.ShippingAddress.StreetAddressEnabled)
                                    {
                                        <li class="address1">
                                            @Model.ShippingAddress.Address1
                                        </li>
                                    }
                                    if (Model.ShippingAddress.StreetAddress2Enabled && !string.IsNullOrEmpty(Model.ShippingAddress.Address2))
                                    {
                                        <li class="address2">
                                            @Model.ShippingAddress.Address2
                                        </li>
                                    }
                                    @if (Model.ShippingAddress.CityEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.City) ||
                                   Model.ShippingAddress.CountyEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.County) ||
                                   Model.ShippingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.StateProvinceName) ||
                                   Model.ShippingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.ZipPostalCode))
                                    {
                                        <li class="city-state-zip">
                                            @if (Model.ShippingAddress.CityEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.City))
                                            {
                                                @Model.ShippingAddress.City
                                                @if (Model.ShippingAddress.CountyEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.County) ||
                                               Model.ShippingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.StateProvinceName) ||
                                               Model.ShippingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.ZipPostalCode))
                                                {
                                                    <text>,</text>
                                                }
                                            }
                                            @if (Model.ShippingAddress.CountyEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.County))
                                            {
                                                @Model.ShippingAddress.County
                                                @if (Model.ShippingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.StateProvinceName) ||
                                               Model.ShippingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.ZipPostalCode))
                                                {
                                                    <text>,</text>
                                                }
                                            }
                                            @if (Model.ShippingAddress.StateProvinceEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.StateProvinceName))
                                            {
                                                @Model.ShippingAddress.StateProvinceName
                                                @if (Model.ShippingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.ZipPostalCode))
                                                {
                                                    <text>,</text>
                                                }
                                            }
                                            @if (Model.ShippingAddress.ZipPostalCodeEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.ZipPostalCode))
                                            {
                                                @Model.ShippingAddress.ZipPostalCode
                                            }
                                        </li>
                                    }
                                    if (Model.ShippingAddress.CountryEnabled && !string.IsNullOrEmpty(Model.ShippingAddress.CountryName))
                                    {
                                        <li class="country">
                                            @Model.ShippingAddress.CountryName
                                        </li>
                                    }
                                    if (!string.IsNullOrEmpty(Model.ShippingAddress.FormattedCustomAddressAttributes))
                                    {
                                        <li class="custom-attributes-view">
                                            @Html.Raw(Model.ShippingAddress.FormattedCustomAddressAttributes)
                                        </li>
                                    }
                                }
                                else
                                {
                                    if (!string.IsNullOrEmpty(Model.PickupAddress.Address1))
                                    {
                                        <li class="address1">
                                            @Model.PickupAddress.Address1
                                        </li>
                                    }
                                    if (!string.IsNullOrEmpty(Model.PickupAddress.City) ||
                                        !string.IsNullOrEmpty(Model.PickupAddress.County) ||
                                        !string.IsNullOrEmpty(Model.PickupAddress.StateProvinceName) ||
                                        !string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                                    {
                                        <li class="city-state-zip">
                                            @if (!string.IsNullOrEmpty(Model.PickupAddress.City))
                                            {
                                                @Model.PickupAddress.City
                                                @if (!string.IsNullOrEmpty(Model.PickupAddress.County) ||
                                               !string.IsNullOrEmpty(Model.PickupAddress.StateProvinceName) ||
                                               !string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                                                {
                                                    <text>,</text>
                                                }
                                            }
                                            @if (!string.IsNullOrEmpty(Model.PickupAddress.County))
                                            {
                                                @Model.PickupAddress.County
                                                @if (!string.IsNullOrEmpty(Model.PickupAddress.StateProvinceName) ||
                                               !string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                                                {
                                                    <text>,</text>
                                                }
                                            }
                                            @if (!string.IsNullOrEmpty(Model.PickupAddress.StateProvinceName))
                                            {
                                                @Model.PickupAddress.StateProvinceName
                                                @if (!string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                                                {
                                                    <text>,</text>
                                                }
                                            }
                                            @if (!string.IsNullOrEmpty(Model.PickupAddress.ZipPostalCode))
                                            {
                                                @Model.PickupAddress.ZipPostalCode
                                            }
                                        </li>
                                    }
                                    if (!string.IsNullOrEmpty(Model.PickupAddress.CountryName))
                                    {
                                        <li class="country">
                                            @Model.PickupAddress.CountryName
                                        </li>
                                    }
                                }
                            </ul>
                        </div>
                        <div class="shipping-method-info">
                            <div class="title">
                                <strong>@T("Order.Shipping")</strong>
                            </div>
                            <ul class="info-list">
                                <li class="shipping-method">
                                    <span class="label">
                                        @T("Order.Shipping.Name"):
                                    </span>
                                    <span class="value">
                                        @Model.ShippingMethod
                                    </span>
                                </li>
                                @if (!Model.PrintMode)
                                {
                                    <li class="shipping-status">
                                        <span class="label">
                                            @T("Order.Shipping.Status"):
                                        </span>
                                        <span class="value">
                                            @Model.ShippingStatus
                                        </span>
                                    </li>
                                }
                            </ul>
                        </div>
                    </div>
                }
            </div>
            @if (!Model.PrintMode && Model.Shipments.Count > 0)
            {
                <div class="section shipments">
                    <div class="title">
                        <strong>@T("Order.Shipments")</strong>
                    </div>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                <col width="1" />
                                <col />
                                <col />
                                <col />
                                <col />
                            </colgroup>
                            <thead>
                                <tr>
                                    <th class="shipment-id">
                                        @T("Order.Shipments.ID")
                                    </th>
                                    <th class="tracking-number">
                                        @T("Order.Shipments.TrackingNumber")
                                    </th>
                                    <th class="shipping-date">
                                        @T("Order.Shipments.ShippedDate")
                                    </th>
                                    <th class="delivery-date">
                                        @T("Order.Shipments.DeliveryDate")
                                    </th>
                                    <th class="view-details">
                                        @T("Order.Shipments.ViewDetails")
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Shipments)
                                {
                                    <tr>
                                        <td class="shipment-id">
                                            <label>@T("Order.Shipments.ID"):</label>
                                            <span>@item.Id.ToString()</span>
                                        </td>
                                        <td class="tracking-number">
                                            <label>@T("Order.Shipments.TrackingNumber"):</label>
                                            @item.TrackingNumber
                                        </td>
                                        <td class="shipped-date">
                                            <label>@T("Order.Shipments.ShippedDate"):</label>
                                            @if (item.ShippedDate.HasValue)
                                            {
                                                <span>@item.ShippedDate.Value.ToString("D")</span>
                                            }
                                            else
                                            {
                                                <span>@T("Order.Shipments.ShippedDate.NotYet")</span>
                                            }
                                        </td>
                                        <td class="delivery-date">
                                            <label>@T("Order.Shipments.DeliveryDate"):</label>
                                            @if (item.DeliveryDate.HasValue)
                                            {
                                                <span>@item.DeliveryDate.Value.ToString("D")</span>
                                            }
                                            else
                                            {
                                                <span>@T("Order.Shipments.DeliveryDate.NotYet")</span>
                                            }
                                        </td>
                                        <td class="view-details">
                                            <a href="@Url.RouteUrl("ShipmentDetails", new { shipmentId = item.Id })" title="@T("Order.Shipments.ViewDetails")">@T("Order.Shipments.ViewDetails")</a>
                                        </td>
                                    </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            }
            @if (Model.Items.Count > 0)
            {
                if (!Model.PrintMode && Model.OrderNotes.Count > 0)
                {
                    <div class="section order-notes">
                        <div class="title">
                            <strong>@T("Order.Notes")</strong>
                        </div>
                        <div class="table-wrapper">
                            <table class="data-table">
                                <colgroup>
                                    <col />
                                    <col />
                                </colgroup>
                                <thead>
                                    <tr>
                                        <th class="created-on">
                                            @T("Order.Notes.CreatedOn")
                                        </th>
                                        <th class="note">
                                            @T("Order.Notes.Note")
                                        </th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @foreach (var item in Model.OrderNotes)
                                    {
                                        <tr>
                                            <td class="created-on">
                                                @item.CreatedOn.ToString()
                                            </td>
                                            <td class="note">
                                                @Html.Raw(item.Note)
                                                @if (item.HasDownload)
                                                {
                                                    <p class="download">
                                                        <a href="@Url.RouteUrl("GetOrderNoteFile", new { ordernoteid = item.Id })">@T("Order.Notes.Download")</a>
                                                    </p>
                                                }
                                            </td>
                                        </tr>
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                }
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderDetailsPageBeforeproducts, additionalData = Model })
                <div class="section products">
                    <div class="title">
                        <strong>@T("Order.Product(s)")</strong>
                    </div>
                    <div class="table-wrapper">
                        <table class="data-table">
                            <colgroup>
                                @if (Model.ShowSku)
                                {
                                    <col width="1" />
                                }
                                <col />
                                @if (Model.ShowVendorName)
                                {
                                    <col width="1" />
                                }
                                <col width="1" />
                                <col width="1" />
                                <col width="1" />
                            </colgroup>
                            <thead>
                                <tr>
                                    @if (Model.ShowSku)
                                    {
                                        <th class="sku">
                                            @T("Order.Product(s).SKU")
                                        </th>
                                    }
                                    <th class="name">
                                        Picture
                                    </th>
                                    <th class="name">
                                        @T("Order.Product(s).Name")
                                    </th>
                                    @if (Model.ShowVendorName)
                                    {
                                        <th class="vendor">
                                            @T("Order.Product(s).VendorName")
                                        </th>
                                    }
                                    <th class="price">
                                        @T("Order.Product(s).Price")
                                    </th>
                                    <th class="quantity">
                                        @T("Order.Product(s).Quantity")
                                    </th>
                                    <th class="total">
                                        @T("Order.Product(s).Total")
                                    </th>
                                    <th>
                                        Action
                                    </th>
                                </tr>
                            </thead>
                            <tbody>
                                @foreach (var item in Model.Items)
                                {
                                <tr>
                                    @if (Model.ShowSku)
                                    {
                                        <td class="sku">
                                            <label class="td-title">@T("Order.Product(s).SKU"):</label>
                                            <span class="sku-number">@item.Sku</span>
                                        </td>
                                    }
                                    <td>
                                        <img class="w-50" src="@item.PictureThumbnailUrl" />
                                    </td>
                                    <td class="product">
                                        @if (!Model.PrintMode)
                                        {
                                            <em><a href="@Url.RouteUrl("Product", new { SeName = item.ProductSeName })">@item.ProductName</a></em>
                                        }
                                        else
                                        {
                                            @item.ProductName
                                        }
                                        @if (!string.IsNullOrEmpty(item.AttributeInfo))
                                        {
                                            <div class="attributes">
                                                @Html.Raw(item.AttributeInfo)
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(item.RentalInfo))
                                        {
                                            <div class="rental-info">
                                                @Html.Raw(item.RentalInfo)
                                            </div>
                                        }
                                        @if (item.DownloadId > 0)
                                        {
                                            <div class="download">
                                                <a href="@Url.RouteUrl("GetDownload", new { orderItemId = item.OrderItemGuid })">@T("DownloadableProducts.Fields.Download")</a>
                                            </div>
                                        }
                                        @if (item.LicenseId > 0)
                                        {
                                            <div class="download license">
                                                <a href="@Url.RouteUrl("GetLicense", new {orderItemId = item.OrderItemGuid})">@T("DownloadableProducts.Fields.DownloadLicense")</a>
                                            </div>
                                        }
                                        @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderDetailsProductLine, additionalData = item })
                                    </td>
                                    @if (Model.ShowVendorName)
                                    {
                                        <td class="vendor">
                                            <label class="td-title">@T("Order.Product(s).VendorName"):</label>
                                            <span class="vendor-name">@item.VendorName</span>
                                        </td>
                                    }
                                    <td class="unit-price">
                                        <label class="td-title">@T("Order.Product(s).Price"):</label>
                                        <span class="product-unit-price">@item.UnitPrice</span>
                                    </td>
                                    <td class="quantity">
                                        <label class="td-title">@T("Order.Product(s).Quantity"):</label>
                                        <span class="product-quantity">@item.Quantity</span>
                                    </td>
                                    <td class="total">
                                        <label class="td-title">@T("Order.Product(s).Total"):</label>
                                        <span class="product-subtotal">@item.SubTotal</span>
                                    </td>
                                    <td>
                                        @if (Model.ShippingStatus == "Delivered" && !item.HasReview && item.AllowCustomerReviews)
                                        {
                                            <span><a href="@Url.RouteUrl("ShuqBuyerReview", new { orderItemId = item.Id })" title="View details">Add Review</a></span>

                                        }
                                        else
                                        {
                                            <span>-</span>
                                        }
                                    </td>
                                </tr>
                                }
                            </tbody>
                        </table>
                    </div>
                    @if (Model.Items.Count > 0 && Model.DisplayTaxShippingInfo)
                    {
                        var inclTax = Model.PricesIncludeTax;
                        //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                        //of course, you can modify appropriate locales to include VAT info there
                        <div class="tax-shipping-info">
                            @T(inclTax ? "Order.TaxShipping.InclTax" : "Order.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                        </div>
                    }
                </div>
                @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderDetailsPageAfterproducts, additionalData = Model })
                <div class="section options">
                    @if (!string.IsNullOrEmpty(Model.CheckoutAttributeInfo))
                    {
                        <div class="selected-checkout-attributes">
                            @Html.Raw(Model.CheckoutAttributeInfo)
                        </div>
                    }
                </div>
                <div class="section totals">
                    <div class="total-info">
                        <table class="cart-total">
                            <tbody>
                                <tr>
                                    <td class="cart-total-left">
                                        <label>@T("Order.SubTotal"):</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span>@Model.OrderSubtotal</span>
                                    </td>
                                </tr>
                                @if (!string.IsNullOrEmpty(Model.OrderSubTotalDiscount))
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@T("Order.SubTotalDiscount"):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@Model.OrderSubTotalDiscount</span>
                                        </td>
                                    </tr>
                                }
                                @if (Model.IsShippable)
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@T("Order.Shipping"):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@Model.OrderShipping</span>
                                        </td>
                                    </tr>
                                }
                                @if (!string.IsNullOrEmpty(Model.PaymentMethodAdditionalFee))
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@T("Order.PaymentMethodAdditionalFee"):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@Model.PaymentMethodAdditionalFee</span>
                                        </td>
                                    </tr>
                                }
                                @if (Model.DisplayTaxRates && Model.TaxRates.Count > 0)
                                {
                                    foreach (var taxRate in Model.TaxRates)
                                    {
                                        <tr>
                                            <td class="cart-total-left">
                                                <label>@string.Format(T("Order.TaxRateLine").Text, taxRate.Rate):</label>
                                            </td>
                                            <td class="cart-total-right">
                                                <span>@taxRate.Value</span>
                                            </td>
                                        </tr>
                                    }
                                }
                                @if (Model.DisplayTax)
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@T("Order.Tax"):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@Model.Tax</span>
                                        </td>
                                    </tr>
                                }
                                @if (!string.IsNullOrEmpty(Model.OrderTotalDiscount))
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@T("Order.TotalDiscount"):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@Model.OrderTotalDiscount</span>
                                        </td>
                                    </tr>
                                }
                                @if (Model.GiftCards.Count > 0)
                                {
                                    foreach (var gc in Model.GiftCards)
                                    {
                                        <tr>
                                            <td class="cart-total-left">
                                                <label>@string.Format(T("Order.GiftCardInfo").Text, gc.CouponCode):</label>
                                            </td>
                                            <td class="cart-total-right">
                                                <span>@gc.Amount</span>
                                            </td>
                                        </tr>
                                    }
                                }
                                @if (Model.RedeemedRewardPoints > 0)
                                {
                                    <tr>
                                        <td class="cart-total-left">
                                            <label>@string.Format(T("Order.RewardPoints").Text, Model.RedeemedRewardPoints):</label>
                                        </td>
                                        <td class="cart-total-right">
                                            <span>@Model.RedeemedRewardPointsAmount</span>
                                        </td>
                                    </tr>
                                }
                                <tr>
                                    <td class="cart-total-left">
                                        <label>@T("Order.OrderTotal"):</label>
                                    </td>
                                    <td class="cart-total-right">
                                        <span><strong>@Model.OrderTotal</strong></span>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    @if (!Model.PrintMode)
                    {
                        <div class="actions">
                            @if (Model.IsReOrderAllowed)
                            {
                                <input type="button" value="@T("Order.Reorder")" class="button-1 re-order-button" onclick="setLocation('@Url.RouteUrl("ReOrder", new { orderId = Model.Id })    ')" />
                            }
                            @if (Model.IsReturnRequestAllowed)
                            {
                                <input type="button" value="@T("Order.ReturnItems")" class="button-2 return-items-button" onclick="setLocation('@Url.RouteUrl("ReturnRequest_Customer", new { orderId = Model.Id })    ')" />
                            }
                            @if (Model.IsCancelOrderAllowed)
                            {
                                <input type="button" value="@T("Order.Cancel")" class="button-2 order-details-button" onclick="setLocation('@Url.RouteUrl("OrderCancellation", new { orderId = Model.Id })')" />
                            }

                            @if (Model.IsReadyToReceive)
                            {
                                <form asp-route="OrderReceived" method="post" style="display:inline-block" id="form-order-received">
                                    <input type="submit" name="order-received" value="@T("Order.OrderReceived")" class="button-2" />
                                    <input type="hidden" name="orderId" value="@Model.Id" />
                                </form>
                            }
                        </div>
                    }
                </div>
            }
            @await Component.InvokeAsync("Widget", new { widgetZone = PublicWidgetZones.OrderDetailsPageBottom, additionalData = Model })
        </div>
    </div>

    <div id="returnInstruction-window" class="modal fade" tabindex="-1" role="dialog" aria-labelledby="returnInstruction-window-title">
        <div class="modal-dialog">
            <div class="modal-content">
                <div class="modal-header">
                    <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                    <h4 class="modal-title" id="returnInstruction-window-title"></h4>
                </div>

                <div class="form-horizontal">
                    <div class="modal-body">
                        <ul class="common-list">
                            <li>
                                <em>Drop off Parcel at a <a class="text-primary" href="https://jtexpress.my/location">branch</a> close to you.  </em>
                            </li>
                        </ul>
                        <div class="form-group">
                            <div class="col-md-12 text-center">
                                <img alt="" src="@ViewBag.BarCode" style="height:100px;" />
                            </div>
                        </div>
                    </div>
                    <div class="modal-footer">
                        <button type="submit" class="btn btn-primary">
                            @T("Admin.Common.ImportFromExcel")
                        </button>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <script asp-location="Footer">
    var shippingStatus = "@Model.ShippingStatus";
    var orderStatus = "@Model.OrderStatus";
    var hasOrderReceived = "@Model.OrderReceived";
    var isReadyToReceive = "@Model.IsReadyToReceive";
    var isOrderReviewed = "@Model.IsOrderReviewed";

    let getShippingOrderStatus = function () {
        if (hasOrderReceived.toLowerCase() === "True".toLowerCase() || (isReadyToReceive.toLowerCase() === "False".toLowerCase() && shippingStatus.toLowerCase() === "Delivered".toLowerCase())) {
            $('#step-6').prop('checked', true);
        }
        else if (orderStatus.toLowerCase() === "Preparing".toLowerCase()
            && shippingStatus.toLowerCase() !== "Delivered".toLowerCase()
            && shippingStatus.toLowerCase() !== "Shipped".toLowerCase()) {
            $('#step-2').prop('checked', true);
        }
        else if (isOrderReviewed.toLowerCase() === "True".toLowerCase()
            && hasOrderReceived.toLowerCase() === "False".toLowerCase()){
            $('#step-5').prop('checked', true);
        }
        else if (shippingStatus.toLowerCase() === "Delivered".toLowerCase()) {
            $('#step-4').prop('checked', true);
        }
        else if (shippingStatus.toLowerCase() === "Shipped".toLowerCase()) {
            $('#step-3').prop('checked', true);
        }

        else {
            $('#step-1').prop('checked', true);
        }
    };

    $(document).ready(function () {
        getShippingOrderStatus();

        $('[name="order-received"]').click(function (e) {
            e.preventDefault();
            e.stopPropagation();

            swal({
                icon: "warning",
                title: '',
                text: '@T("Order.OrderReceived.Confirmation")',
                buttons: {
                    cancel: {
                        text: "Cancel",
                        value: false,
                        visible: true,
                        className: "button-2",
                        closeModal: true
                    },
                    confirm: {
                        text: "Confirm",
                        value: true,
                        visible: true,
                        className: "btn-primary",
                        closeModal: true
                    }
                },
            }).then(function (isConfirm) {
                if (isConfirm) {
                    $('#form-order-received').submit();
                }
            });

            return false;
        });
    });

    </script>

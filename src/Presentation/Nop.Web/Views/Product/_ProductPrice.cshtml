@model ProductDetailsModel.ProductPriceModel
@using Nop.Core
@using Nop.Core.Domain.Tax
@inject IWorkContext workContext
@if (!Model.CustomerEntersPrice)
{
    <div class="prices">
        @if (Model.CallForPrice)
        {
            @*call for price*@
            <div class="product-price call-for-price">
                <span>@T("Products.CallForPrice")</span>
            </div>
        }
        else
        {
            if (Model.IsRental)
            {
                <div class="rental-price">
                    <span>@T("Products.Price.RentalPrice"):</span>
                    <span>@Model.RentalPrice</span>
                </div>
            }
            <div class="@if (string.IsNullOrWhiteSpace(Model.Price))
                        {
                            <text>product-price</text>
                        }
                        else
                        {
                            <text>non-discounted-price</text>
                        }">

                @*render price*@
                <span @if (string.IsNullOrWhiteSpace(Model.Price)) { <text> id="price-value-@(Model.ProductId)" class="price-value-@(Model.ProductId) @(Model.ProductBusinessNature == "Eat" ?"eat-color":"mart-color")" </text> }>
                    @Html.Raw(Model.OldPrice)
                </span>
            </div>
            if (!string.IsNullOrWhiteSpace(Model.Price))
            {
                @*discounted price*@
                <div class="product-price discounted-price">
                    <span>@T("Products.Price.WithDiscount"):</span>
                    <span class="price-value-@(Model.ProductId) @(Model.ProductBusinessNature == "Eat" ?"eat-color":"mart-color")">
                        @Html.Raw(Model.Price)
                    </span>
                </div>
            }
            if (!string.IsNullOrEmpty(Model.BasePricePAngV))
            {
                <div class="base-price-pangv @(Model.ProductBusinessNature == "Eat" ?"eat-color":"mart-color")" id="base-price-pangv-@Model.ProductId">
                    @Model.BasePricePAngV
                </div>
            }
            if (Model.DisplayTaxShippingInfo)
            {
                var inclTax = workContext.TaxDisplayType == TaxDisplayType.IncludingTax;
                //tax info is already included in the price (incl/excl tax). that's why we display only shipping info here
                //of course, you can modify appropriate locales to include VAT info there
                <div class="tax-shipping-info">
                    @T(inclTax ? "Products.Price.TaxShipping.InclTax" : "Products.Price.TaxShipping.ExclTax", Url.RouteUrl("Topic", new { SeName = Html.GetTopicSeName("shippinginfo") }))
                </div>
            }
        }
    </div>
}

@model ShipmentModel

@using System.Text

@{
    //page title
    ViewBag.PageTitle = string.Format(T("Admin.Orders.Shipments.AddNew.Title").Text, Model.CustomOrderNumber);
    //active menu item (system name)
    Html.SetActiveMenuItemSystemName("Orders");

    var itemsFromMultipleWarehouses = Model.Items
        .Where(x => x.AllowToChooseWarehouse && x.AvailableWarehouses.Count > 0)
        .ToList();
}

<form asp-controller="Order" asp-action="AddShipmentShuq" method="post">
    <div class="content-header clearfix">
        <h1 class="pull-left">
            @string.Format(T("Admin.Orders.Shipments.AddNew.Title").Text, Model.CustomOrderNumber)
            <small>
                <i class="fa fa-arrow-circle-left"></i>
                <a asp-action="Edit" asp-route-id="@Model.OrderId">@T("Admin.Orders.Shipments.BackToOrder")</a>
            </small>
        </h1>
        <div class="pull-right">
            <button type="submit" id="shipment-save" name="save" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.Save")
            </button>
      @*      <button type="submit" id="shipment-save-continue" name="save-continue" class="btn bg-blue">
                <i class="fa fa-floppy-o"></i>
                @T("Admin.Common.SaveContinue")
            </button>*@
            <nop-action-confirmation asp-button-id="shipment-save" asp-additional-confirm="Admin.Orders.Shipments.Products.Warehouse.QuantityNotEnough" />
            <nop-action-confirmation asp-button-id="shipment-save-continue" asp-additional-confirm="Admin.Orders.Shipments.Products.Warehouse.QuantityNotEnough" />
            @await Component.InvokeAsync("AdminWidget", new { widgetZone = AdminWidgetZones.OrderShipmentAddButtons })
        </div>
    </div>
    <div asp-validation-summary="All"></div>

    <input type="hidden" asp-for="Id" />
    <input type="hidden" asp-for="OrderId" />

    <div class="content">
        <div class="form-horizontal">
            <div class="panel-group">
                <div class="panel panel-default">
                    <div class="panel-body">
                        @if (Model.VendorBusinessNature == "Shuq Mart")
                        {
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="RequireInsurance" />
                                </div>
                                <div class="col-md-9">
                                    <nop-editor asp-for="RequireInsurance" />
                                    <div>@T("Admin.AddShipping.RequireInsurance.Help")</div>

                                </div>
                            </div>
                        }

                        <div class="form-group">
                            <div class="col-md-3">
                                <nop-label asp-for="AdminComment" />
                            </div>
                            <div class="col-md-9">
                                <nop-editor asp-for="AdminComment" />
                            </div>
                        </div>

                        @if (Model.Id != 0)
                        {
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="TrackingNumber" />
                                </div>
                                <div class="col-md-9">
                                    <nop-editor asp-for="TrackingNumber" />
                                </div>
                            </div>
                            <div class="form-group">
                                <div class="col-md-3">
                                    <nop-label asp-for="CanShip" />
                                </div>
                                <div class="col-md-9">
                                    <nop-editor asp-for="CanShip" />
                                </div>
                            </div>
                            <nop-nested-setting asp-for="CanShip">
                                <div class="form-group" id="pnlHasDelivery">
                                    <div class="col-md-3">
                                        <nop-label asp-for="CanDeliver" />
                                    </div>
                                    <div class="col-md-9">
                                        <nop-editor asp-for="CanDeliver" />
                                    </div>
                                </div>
                            </nop-nested-setting>
                        }

                    </div>
                    <script>


                        $(document).ready(function () {
                            $("#shipment-save").bind("focus", function () {
                                if (validateWarehouseAvailability("save")) {
                                    $("#shipment-save-action-confirmation").remove();
                                    $(this).attr("name", "save").attr("type", "submit");
                                }
                            }).bind("click", function () {
                                return validateWarehouseAvailability("save");
                            });;

                            $("#shipment-save-continue").bind("focus", function () {
                                if (validateWarehouseAvailability("continue")) {
                                    $("#shipment-save-continue-action-confirmation").remove();
                                    $(this).attr("name", "save-continue").attr("type", "submit");
                                }
                            }).bind("click", function () {
                                return validateWarehouseAvailability("continue");
                            });;

                            $("#@Html.IdFor(model => model.CanShip)").click(toggleDelivery);
                            toggleDelivery();
                        });

                        function toggleDelivery() {
                            if ($('#@Html.IdFor(model => model.CanShip)').is(':checked'))
                            {
                                $('#pnlHasDelivery').show();
                            }
                            else
                            {
                                $('#pnlHasDelivery').hide();
                            }
                        }

                        function validateWarehouseAvailability(action) {
                            @{
                                var sb = new StringBuilder();
                                var count = itemsFromMultipleWarehouses.Count;
                                if (count == 0)
                                {
                                    sb.Append("true");
                                }
                                else
                                {
                                    for (var i = 0; i <= count - 1; i++)
                                    {
                                        var item = itemsFromMultipleWarehouses[i];
                                        sb.AppendFormat("validateAvailableQuantity('{0}')", item.OrderItemId);
                                        if (i != count - 1)
                                        {
                                            sb.Append(" && ");
                                        }
                                    }
                                }
                            }
                            var valid = @(Html.Raw(sb.ToString()));
                            if (!valid) {
                                if (action === "save") {
                                    $('#shipment-save-action-confirmation').modal('toggle');
                                }
                                if (action === "continue") {
                                    $('#shipment-save-continue-action-confirmation').modal('toggle');
                                }
                                return false;
                            }
                            return true;
                        }

                        function validateAvailableQuantity(orderItemId) {
                            var enteredValue = parseInt($('#qtyToAdd' + orderItemId).val(), 10);
                            if (enteredValue <= 0)
                                return true;
                            var reservedValue = parseInt($('#warehouse_' + orderItemId).find(':selected').data('reserved-qty'), 10);
                            var plannedValue = parseInt($('#warehouse_' + orderItemId).find(':selected').data('planned-qty'), 10);
                            var availableToAdd = reservedValue - plannedValue;
                            return enteredValue <= availableToAdd;
                        }
                    </script>
                </div>
            </div>
        </div>
    </div>
</form>